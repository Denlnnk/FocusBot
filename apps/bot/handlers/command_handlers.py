from aiogram import Router
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from apps.bot.markups.inline import task_adding_markup
from apps.bot.services.planner.directions import check_user_directions_exists
from apps.bot.states import AddTask, AiPlanCreation
from apps.bot.utils.decorators import track_user_data

command_router = Router()


@command_router.message(CommandStart())
@track_user_data
async def _(message: Message):
    user_info = message.from_user
    start_text = (
        f'–ü—Ä–∏–≤–µ—Ç üëã {user_info.first_name}'
        f'\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –∏ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –∑–∞–¥–∞—á–∞—Ö.'
        f'\n–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å?'
    )
    await message.answer(start_text)


@command_router.message(Command('add'))
@track_user_data
async def _(message: Message, state: FSMContext):
    if await check_user_directions_exists(message.from_user.id):
        await message.answer(
            '–°–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –≤—ã–±–µ—Ä–µ–º –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö?', reply_markup=task_adding_markup()
        )
        return

    await message.answer(
        '–ö–∞–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç —É –∑–∞–¥–∞—á–∏?(–Ω–∞–ø—Ä–∏–º–µ—Ä: English, Self Education –∏ —Ç–¥)'
    )
    await state.set_state(AddTask.task_direction)


@command_router.message(Command('plan_creation'))
@track_user_data
async def _(message: Message, state: FSMContext):
    answer_text = (
        '–ü–æ –∫–∞–∫–∏–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º –∂–µ–ª–∞–µ—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–Ω?'
        '\n–ü—Ä–∏–º–µ—Ä: English, Self Education'
        '\n<b>–í–∞–∂–Ω–æ!</b>: –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ—á–∏—Å–ª—è—Ç—å —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é'
    )
    await message.answer(answer_text, parse_mode='html')
    await state.set_state(AiPlanCreation.plan_directions)
